工厂模式与单例模式作业
请自己手敲一遍简单工厂模式、工厂方法模式、抽象工厂方法模式
请手敲一遍饿汉、懒汉、枚举、容器式单例模式
请语音表达出单例模式有哪些实现方式以及优缺点！（语音作业）



语音：

单例模式主要有 饿汉、懒汉、枚举、容器式、静态内部类 单例模式

饿汉式：优点是一上来就创建，线程安全，用的时候快，缺点是不管你用不用，不用的话会导致资源浪费；
懒汉式：优点是可以优化饿汉式的缺点，没有用到的时候不会加载造成资源浪费，缺点是首次加载较慢，存在线程安全问题，改良后每次获取对象都会进行同步，消耗资源；
        *注册式单例*
枚举：jdk1.5后加入  优点：优雅简洁，而且枚举单例规避了反序列化（其他模式通过增加readResolve方法规避）和反射（没有无参构造导致 ，其他模式可以通过在构造方法中抛异常解决），这种方式是Effective Java作者Josh Bloch 提倡的方式，被认为是单例得最优实现
                  缺点：类加载时就会初始化放入内存，和饿汉式一样；不适合大量创建单例的场景；
容器：优点：弥补枚举的缺点，可以方便管理大量单例，有点像懒汉式； 缺点：频繁取值的时候都会有同步锁；

静态内部类: 也称单例持有者模式，实例由内部类创建，由于 JVM 在加载外部类的过程中, 是不会加载静态内部类的, 只有内部类的属性/方法被调用时才会被加载, 并初始化其静态属性。静态属性由static修饰，保证只被实例化一次
            优点：不仅能确保线程安全，也能保证单例的唯一性，同时也延迟了单例的实例化
            缺点：静态内部类也有着一个致命的缺点，就是传参的问题，由于是静态内部类的形式去创建单例的，故外部无法传递参数进去。