1 什么是深克隆、浅克隆？深克隆的方法有哪些？（语音作业）
2 复习前三天内容，画好设计模式脑图上传



1 什么是深克隆、浅克隆？深克隆的方法有哪些？
       原型模式就是拷贝对象,通过实现Cloneable接口重写clone方法来实现,它直接在内存中复制数据，因此不会调用到类的构造方法。
       不但构造方法中的代码不会执行，甚至连访问权限都对原型模式无效,会无视构造方法权限;
       但Object类的clone方法只会拷贝对象中的基本的数据类型，对于数组、容器对象、引用对象等都不会拷贝，都只是一个引用,这就是浅拷贝。
       因为只是一个引用所以当克隆体去修改对象属性的时候会影响到本地,因为在内存中只有一份
       如果要实现深拷贝，必须将原型模式中的数组、容器对象、引用对象等另行拷贝。
       会发生深拷贝的有java中的8中基本类型以及他们的封装类型，另外还有String类型。其余的都是浅拷贝。

        深克隆
        1 在clone方法中手动把所有浅克隆对象都进行克隆，新增成员变量时要改clone方法
        2 采用序列化和反序列话实现
        3 对象转json再转回来的方式 JSONObject.toJsonString  JSONObject.parseObject


原型模式 建造者模式 模板方模式

原型模式：创建型 通过拷贝创建对象
    使用原型模式复制对象不会调用类的构造方法。因为对象的复制是通过调用Object类的clone方法来完成的，它直接在内存中复制数据，因此不会调用到类的构造方法。
不但构造方法中的代码不会执行，甚至连访问权限都对原型模式无效。还记得单例模式吗？单例模式中，只要将构造方法的访问权限设置为private型，就可以实现单例。
但是clone方法直接无视构造方法的权限，所以，单例模式与原型模式是冲突的，在使用时要特别注意。
 * 优点 ：使用原型模式创建对象比直接new一个对象在性能上要好的多，因为Object类的clone方法是一个本地方法，它直接操作内存中的二进制流，特别是复制大对象时，性能的差别非常明显
 * 缺点 ：
 * 适用于：很多软件提供的复制(Ctrl + C)和粘贴(Ctrl + V)操作就是原型模式的典型应用


建造者模式：创建型模式 目的是为了分离对象的属性与创建过程
 * 优点 ：封装性好，创建与使用分离
 * 缺点 ：多了builder类
 * 适用于：较多零件的复杂产品的创建，由于需求变化，各个零件会变，但是组合方式却相对稳定

模板方法模式：行为型模式  当完成一个操作有固定的流程时，通过抽象固定流程，子类继承实现流程细节
 * 优点 ：将不变的东西放在父类，提高复用性，变化的东西放在子类，提高扩展性
 * 缺点 ：因为继承的原因，当父类增加了新的抽象方法 子类全需要改
 * 适用于：当完成一个操作有固定的流程时，通过抽象固定流程，子类继承实现流程细节
          比如JdbcTemplate 封装了所有操作，执行sql的流程也比较固定 需要获取连接 执行语句 关闭连接 ，真正变的是执行语句的变化